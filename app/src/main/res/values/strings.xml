<resources>
    <string name="app_name">FLC</string>

    <string name="data_base_provider">com.tiny.demo.firstlinecode.provider</string>
    <string name="file_provider">com.tiny.demo.firstlinecode.camera</string>

    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>

    <string name="action_settings">Settings</string>

    <string name="title_activity_intent">IntentActivity</string>
    <string name="dummy_button">Dummy Button</string>
    <string name="dummy_content">DUMMY\nCONTENT</string>

    <string name="title_activity_fullscreen">FullscreenActivity</string>

    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="title_activity_login">Sign in</string>

    <!-- Strings related to login -->
    <string name="prompt_email">Email</string>
    <string name="prompt_password">Password (optional)</string>
    <string name="action_sign_in">Sign in or register</string>
    <string name="action_sign_in_short">Sign in</string>
    <string name="error_invalid_email">This email address is invalid</string>
    <string name="error_invalid_password">This password is too short</string>
    <string name="error_incorrect_password">This password is incorrect</string>
    <string name="error_field_required">This field is required</string>
    <string name="permission_rationale">"Contacts permissions are needed for providing email
        completions."
    </string>
    <string name="string_title_china">中国</string>
    <string name="string_loading">正在加载...</string>
    <string name="string_load_failed">加载失败</string>
    <string name="string_exit_app">再按一次退出程序</string>
    <string name="string_get_weather_failed">获取天气信息失败</string>
    <string name="string_comfort">舒适度：</string>
    <string name="string_carwash">洗车指数：</string>
    <string name="string_sport">运动建议：</string>
    <string name="string_sheshidu">℃</string>

    <string name="icons">&#xe636; &#xe6b3; &#xe6b9; &#xe60a;</string>
    <string name="string_erha"><![CDATA[erha 是个小可爱，二哈是个逗比！啊哈哈哈哈哈哈 -->]]></string>
    <string name="dialog_fire_missiles">Fire missiles</string>
    <string name="fire">FIRE</string>
    <string name="cancel">CANCEL</string>
    <string name="pick_color">Pick Color</string>
    <string name="pick_toppings">Pick Your Toppings</string>
    <string name="ok">OK</string>
    <string name="username">Username</string>
    <string name="password">Password</string>
    <string name="signin">Sign In</string>
    <string name="hello_world">hello world</string>

    <string name="permission_read_phone_hint">没有此权限，无法开启这个功能，请开启权限。PERMISSION_READ_PHONE_STATE</string>
    <string name="permission_white_external_hint">没有此权限，无法开启这个功能，请开启权限。PERMISSION_WRITE_EXTERNAL_STORAGE</string>

    <string name="show_toast">弹出toast</string>
    <string name="show_toast_en">弹出toast en</string>

    <string name="content_edit_text_hint">请输入内容</string>
    <string name="write_to">写入</string>
    <string name="edit_text_content_sp_key">edit_text_content</string>
    <string name="not_for_result">不获取结果</string>
    <string name="for_result">获取结果</string>

    <string name="string_please_add_optional">请先添加自选股！</string>
    <string name="string_top_success">置顶成功</string>
    <string name="string_please_select_stock">请选择要删除的股票！</string>
    <string name="string_ensure_delete_all_optional">确定删除所有自选？</string>
    <string name="request_data_error">请求失败，请稍后重试</string>
    <string name="string_add_optional_succ">添加自选成功</string>
    <string name="string_delete_optional_succ">删除自选成功</string>

    <string name="title_activity_header_and_footer_use">HeaderAndFooterUseActivity</string>
    <string name="error">Network error</string>
    <string name="network_err">Simulation network error</string>
    <string name="empty_network_error">Network error, Click Retry</string>
    <string name="empty_no_data">There is no data, Click Retry</string>

    <!-- SmartRefreshLayout Demo start -->
    <string name="title_activity_fly_refresh">FlyRefresh</string>
    <string name="title_activity_index_main">Refresh</string>
    <string name="title_style">样式</string>
    <string name="title_using">使用</string>
    <string name="title_practice">实战</string>
    <string name="region_hint">未选择</string>
    <string name="region_name">已选地区</string>

    <string name="fragment_refresh_styles">风格展示</string>
    <string name="fragment_refresh_using">使用示例</string>
    <string name="fragment_refresh_practive">实战</string>
    <string name="title_activity_style_wave_swip">全屏水波</string>
    <string name="title_activity_style_material">官方主题</string>
    <string name="title_activity_style_water_drop">苹果水滴</string>
    <string name="title_activity_style_phoenix">金色校园</string>
    <string name="title_activity_style_taurus">冲上云霄</string>
    <string name="title_activity_style_bezier">贝塞尔雷达</string>
    <string name="title_activity_style_classics">经典风格</string>
    <string name="title_activity_style_circle">弹出圆圈</string>
    <string name="title_activity_style_fungame_battlecity">战争城市</string>
    <string name="title_activity_style_fungame_hitblock">打砖块</string>
    <string name="title_activity_style_storehouse">StoreHouse</string>
    <string name="title_activity_using_basic">基本使用</string>
    <string name="title_activity_using_assign_default">全局默认</string>
    <string name="title_activity_using_assign_xml">XML配置</string>
    <string name="title_activity_using_assign_code">java代码设置</string>
    <string name="description_set_default_creater">这是使用定制Header和Footer的第一种方法-全局默认\n\n
        本方法是实际项目中最常用的方法，其特点有：\n\n
        1.设置一次全部生效，不用多次写重复的代码\n
        2.优先级最低，在特别页面可以轻松的覆盖替换\n\n
        使用方法： \n
        //设置全局的Header构建器 \n
        SmartRefreshLayout.setDefaultRefreshHeaderCreater(new DefaultRefreshHeaderCreater() {\n
        public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) {\n
        return new ClassicsHeader(context);//指定为经典Header，默认是 贝塞尔雷达Header\n
        }\n
        });\n
        //设置全局的Footer构建器\n
        SmartRefreshLayout.setDefaultRefreshFooterCreater(new DefaultRefreshFooterCreater() {\n
        public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) {\n
        return new ClassicsFooter(context);//指定为经典Footer，默认是 BallPulseFooter\n
        }\n
        });\n\n
        关键代码，需要在布局生成之前设置，建议代码放在 Application.onCreate 中
    </string>
    <string name="description_define_in_xml"><![CDATA[这是使用定制Header和Footer的第二种方法-Xml中配置\n\n
        在需要使用特别的Header或者特别配置的页面时候可以使用本方法\n\n
        本方法的特点：\n
        1.可以在Androd Studio中的预览窗口预览效果\n
        2.优先级高于 【全局默认】但是低于 【JavaCode】\n\n
        代码示例：\n
        <com.scwang.smartrefresh.SmartRefreshLayout\n
            \t\tandroid:layout_width="match_parent"\n
            \t\tandroid:layout_height="match_parent">\n
            \t<com.scwang.smartrefresh.header.ClassicsHeader\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="wrap_content"/>\n
            \t<TextView\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="match_parent"/>\n
            \t<com.scwang.smartrefresh.footer.ClassicsFooter\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="wrap_content"/>\n
        </com.scwang.smartrefresh.SmartRefreshLayout>\n
    ]]></string>
    <string name="description_define_in_code">这是使用定制Header和Footer的第三种方法-代码设置\n\n
        本方法是实际项目中比较少用的方法，其特点有：\n\n
        1.设置一次生效一次，需要多处设置，建议特别的页面使用\n
        2.优先级最高，即使使用了会覆盖方法一和方法二的设置\n\n
        使用方法： \n
        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);\n
        //设置 Header 为 Material风格\n
        refreshLayout.setRefreshHeader(new MaterialHeader(this));\n
        //设置 Footer 为 三球动画\n
        refreshLayout.setRefreshFooter(new BallPulseFooter(this));\n\n
    </string>
    <string name="title_activity_style_dropbox">掉落盒子</string>
    <string name="title_activity_style_delivery">气球快递</string>
    <string name="title_activity_style_flyrefresh">纸飞机</string>
    <string name="title_activity_using_overscroll">越界回弹</string>
    <string name="title_activity_using_listener">多功能监听器</string>
    <string name="title_activity_using_custom">自定义Header</string>
    <string name="title_activity_practice_repast">餐饮美食</string>
    <string name="title_activity_practice_profile">个人中心</string>
    <string name="title_activity_practice_webview">Github</string>
    <string name="title_activity_practice_feedlist">微博列表</string>
    <string name="title_activity_practice_banner">滚动广告</string>
    <string name="title_activity_practice_weibo">微博主页</string>
    <string name="title_activity_practice_qqbrowser">QQ浏览器</string>
    <string name="github_qqbrowser_kernel">网页由 github.com 提供\n已启用QQ浏览器X5内核</string>
    <string name="title_activity_using_snaphelper">SnapHelper</string>
    <string name="fragment_using_purescroll">纯滚动模式</string>
    <string name="fragment_using_purescroll_header">纯滚动模式-单独指定Header</string>
    <string name="fragment_using_emptylayout">空页面</string>
    <string name="fragment_using_emptylayout_inner">空页面-内部嵌套</string>
    <string name="fragment_using_emptylayout_outer">空页面-外部嵌套</string>
    <string name="fragment_using_nestscroll">嵌套滚动</string>
    <string name="fragment_using_nestedscroll_integral">嵌套滚动-整体嵌套</string>
    <string name="fragment_using_viewpager">ViewPager</string>
    <!-- SmartRefreshLayout Demo end -->

    <string name="chooser_title">Share this photo with</string>

    <string name="title_activity_android_kfysts_chapter01">AndroidKfystsChapter01Activity</string>

    <string name="bind_service">Bind Service</string>
    <string name="unbind_service">Unbind Service</string>
    <string name="messenger_service_binding">This demonstrates how you can communicate with
        a remote service using Messenger.</string>
    <string name="kill_process">Kill Process</string>
    <string name="remote_service_connected">Connected to remote service</string>
    <string name="remote_service_disconnected">Disconnected from remote service</string>
    <string name="remote_service_unbind_disconn">Unbinding due to disconnect</string>
    <string name="remote_call_failed">Failure calling remote service</string>

    <string name="remote_service_started">Remote service has started</string>
    <string name="remote_service_stopped">Remote service has stopped</string>
    <string name="remote_service_label">Sample Remote Service</string>

    <!--notification 适配 8.0-->
    <string name="channel_id">string_notification_channel_id</string>
    <string name="channel_name">string_notification_channel_name</string>
    <string name="channel_description">string_notification_channel_description</string>
    <string name="string_content_ThreadPoolExecutors">线程池不允许使用Executors去创建，而是通过ThreadPoolExecutors的方式，这样的处理方式让写的同学更加明确线程池的运行规则，避免资源耗尽的风险。\n说明：Executors各个方法的弊端：\n1)newFixedThreadPool和newSingleThreadExecutor:\n    主要问题是堆积的请求处理队列可能会耗费非常大的内存，甚至OOM。\n2)newCachedThreadPool和newScheduledThreadPool:\n    主要问题是线程数最大数是Integer.MAX_Value，可能会创建数量非常多的线程，甚至OOM。</string>
</resources>
